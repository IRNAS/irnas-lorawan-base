"""
This python script will create a release on github,
it will generate a version.h file in src folder with macro VERSION equal to
the version provided.
"""
import json
import os
import sys
import argparse
from argparse import RawTextHelpFormatter
from github_release import gh_release_create


### Command line argument parser

# Intro message
intro = "This is an automated release tool!\n\n"
intro += "Make sure that you did 'export GITHUB_TOKEN=<YOUR_TOKEN>' before using this tool, here is how to do it:\n"
intro += "https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line"

# Parser setup
parser = argparse.ArgumentParser(description=intro, formatter_class=RawTextHelpFormatter)
parser.add_argument("--version", type=str,required=True, help="This is a version of release, something like v1.2.5")
parser.add_argument("--body", type=str,required=False, help="This is the visible text in release body")

# Display help message if no arguments are provided
if len(sys.argv)==1:
    parser.print_help(sys.stderr)
    sys.exit(1)
args = parser.parse_args()

# Remove dots and 'v' forversion.h file
version = args.version.replace(".","")
version = version.replace("v","")

# Lets first create content of our version.h and then create it
version_h = "#ifndef VERSION_H\n"
version_h += "#define VERSION_H\n\n"
version_h += "// This file was generated by scripts/release_build.py file.\n\n"
version_h += "#define VERSION " + version + "\n\n"
version_h += "#endif /* VERSION_H *\n"
version_h += "/*** end of file ***\n"

with open("../src/version.h", "w+") as f:
    f.write(version_h)

project_name = os.path.basename(os.path.realpath("../"))

url = "https://api.github.com/repos/IRNAS/" + project_name + "/releases"

#Get last commit, you finished here



payload ={ "tag_name": "v1.0.0",
        "target_commitish": last_commit,
        "name": "v1.0.0",
        "body": "Hellooo from pyhton",
        "draft": "false",
        "prerelease": "false"
}

r = requests.post(url, payload)
print(r.status_code)
print(r.json())

gh_release_create("jcfr/sandbox ", "2.0.0", publish=True, name="Awesome 2.0", asset_pattern="dist/*")
"""
